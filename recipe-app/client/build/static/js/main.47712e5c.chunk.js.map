{"version":3,"sources":["components/Header.jsx","components/Spinner.jsx","components/Ingredient.jsx","actions/types.js","actions/ingredient.js","pages/Home.jsx","pages/NotFound.jsx","reducers/ingredient.js","reducers/recipe.js","reducers/index.js","store.js","App.jsx","index.js"],"names":["Header","Navbar","bg","variant","Brand","href","Spinner","className","Ingredient","ingredient","id","_id","name","enName","onSelect","onRemove","Card","onClick","Img","src","alt","title","Body","Text","Button","GET_INGREDIENTS","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENT_LOADING","GET_RECIPES","SET_RECIPE_LOADING","setLoading","isLoading","type","payload","connect","state","getIngredients","dispatch","a","fetch","res","json","data","console","error","addIngredient","removeIngredient","ingredientLoading","loading","ingredients","selectedIngredients","useState","text","setText","filteredIngredients","setFilteredIngredients","useEffect","handleSelect","handleRemove","Form","Group","controlId","Label","Control","placeholder","onChange","e","target","value","filter","RegExp","trim","test","map","length","NotFound","initialState","reducer","action","isIngredientAdded","some","find","recipes","combineReducers","recipe","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","App","exact","path","component","Home","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47712e5c.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\n\nconst Header = () => (\n    <Navbar bg=\"light\" variant=\"light\">\n        <Navbar.Brand href=\"/\">Рецепты</Navbar.Brand>\n    </Navbar>\n);\n\nexport default Header;\n","import React from 'react';\r\n\r\nconst Spinner = () => <div className=\"text-center w-100\">Загрузка...</div>;\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Ingredient = ({\r\n    ingredient: {_id: id, name, enName},\r\n    onSelect,\r\n    onRemove,\r\n}) => (\r\n    <Card\r\n        onClick={() => onSelect && onSelect(id)}\r\n        className={onRemove ? 'removable-card' : ''}\r\n    >\r\n        <Card.Img\r\n            variant=\"top\"\r\n            src={`/${enName}.jpg`}\r\n            alt={name}\r\n            title={name}\r\n        />\r\n        <Card.Body className=\"pt-0 pb-3\">\r\n            <Card.Text>{name}</Card.Text>\r\n        </Card.Body>\r\n        {onRemove && (\r\n            <Button\r\n                className=\"remove-button\"\r\n                variant=\"danger\"\r\n                onClick={() => onRemove && onRemove(id)}\r\n            >\r\n                X\r\n            </Button>\r\n        )}\r\n    </Card>\r\n);\r\n\r\nexport default Ingredient;\r\n","export const GET_INGREDIENTS = 'GET_INGREDIENTS';\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENT_LOADING = 'SET_INGREDIENT_LOADING';\nexport const GET_RECIPES = 'GET_RECIPES';\nexport const SET_RECIPE_LOADING = 'SET_RECIPE_LOADING';\n","import {\n    GET_INGREDIENTS,\n    ADD_INGREDIENT,\n    REMOVE_INGREDIENT,\n    SET_INGREDIENT_LOADING,\n} from './types';\n\nexport const getIngredients = () => async (dispatch) => {\n    dispatch(setLoading(true));\n\n    try {\n        const res = await fetch('/api/ingredients');\n        const data = await res.json();\n\n        dispatch({\n            type: GET_INGREDIENTS,\n            payload: data,\n        });\n    } catch (error) {\n        console.error(error);\n        dispatch(setLoading(false));\n    }\n};\n\nexport const addIngredient = (id) => ({\n    type: ADD_INGREDIENT,\n    payload: id,\n});\n\nexport const removeIngredient = (id) => ({\n    type: REMOVE_INGREDIENT,\n    payload: id,\n});\n\nfunction setLoading(isLoading) {\n    return {\n        type: SET_INGREDIENT_LOADING,\n        payload: isLoading,\n    };\n}\n","import React, {useState, useEffect} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Spinner from '../components/Spinner';\r\nimport Ingredient from '../components/Ingredient';\r\nimport {\r\n    getIngredients,\r\n    addIngredient,\r\n    removeIngredient,\r\n} from '../actions/ingredient';\r\n\r\nconst Home = ({\r\n    ingredient: {loading: ingredientLoading, ingredients, selectedIngredients},\r\n    getIngredients,\r\n    addIngredient,\r\n    removeIngredient,\r\n}) => {\r\n    const [text, setText] = useState('');\r\n    const [filteredIngredients, setFilteredIngredients] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getIngredients();\r\n    }, [getIngredients]);\r\n\r\n    const handleTextChange = (e) => {\r\n        setText(e.target.value);\r\n\r\n        setFilteredIngredients(\r\n            ingredients.filter(({name}) =>\r\n                new RegExp(e.target.value.trim(), 'ig').test(name)\r\n            )\r\n        );\r\n    };\r\n\r\n    const handleSelect = (id) => {\r\n        addIngredient(id);\r\n    };\r\n\r\n    const handleRemove = (id) => {\r\n        removeIngredient(id);\r\n    };\r\n\r\n    if (ingredientLoading || ingredients === null) {\r\n        return <Spinner />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form>\r\n                <Form.Group controlId=\"text\">\r\n                    <Form.Label>Выберите ингредиенты</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Поиск...\"\r\n                        onChange={handleTextChange}\r\n                        value={text}\r\n                    />\r\n                </Form.Group>\r\n            </Form>\r\n            <div className=\"ingredient-cards\">\r\n                {(text.trim() ? filteredIngredients : ingredients).map(\r\n                    (ingredient) => (\r\n                        <Ingredient\r\n                            key={ingredient._id}\r\n                            ingredient={ingredient}\r\n                            onSelect={handleSelect}\r\n                        />\r\n                    )\r\n                )}\r\n            </div>\r\n            {selectedIngredients.length !== 0 && (\r\n                <>\r\n                    <div className=\"mt-3 mb-2\">Выбранные ингредиенты</div>\r\n                    <div className=\"ingredient-cards\">\r\n                        {selectedIngredients.map((ingredient) => (\r\n                            <Ingredient\r\n                                key={ingredient._id}\r\n                                ingredient={ingredient}\r\n                                onRemove={handleRemove}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nHome.propTypes = {\r\n    ingredient: PropTypes.object.isRequired,\r\n    addIngredient: PropTypes.func.isRequired,\r\n    removeIngredient: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ingredient: state.ingredient,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getIngredients,\r\n    addIngredient,\r\n    removeIngredient,\r\n})(Home);\r\n","import React from 'react';\n\nconst NotFound = () => (\n    <div className=\"text-center\">\n        <h1 className=\"large text-primary\">404</h1>\n        <p className=\"lead\">Страница не найдена</p>\n    </div>\n);\n\nexport default NotFound;\n","import {\r\n    GET_INGREDIENTS,\r\n    ADD_INGREDIENT,\r\n    REMOVE_INGREDIENT,\r\n    SET_INGREDIENT_LOADING,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    selectedIngredients: [],\r\n    loading: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients: action.payload,\r\n                loading: false,\r\n            };\r\n        case ADD_INGREDIENT:\r\n            const isIngredientAdded = state.selectedIngredients.some(\r\n                ({_id}) => _id === action.payload\r\n            );\r\n            if (isIngredientAdded) {\r\n                return {\r\n                    ...state,\r\n                    loading: false,\r\n                };\r\n            }\r\n            const ingredient = state.ingredients.find(\r\n                ({_id}) => _id === action.payload\r\n            );\r\n            return {\r\n                ...state,\r\n                selectedIngredients: [...state.selectedIngredients, ingredient],\r\n                loading: false,\r\n            };\r\n        case REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                selectedIngredients: state.selectedIngredients.filter(\r\n                    ({_id}) => _id !== action.payload\r\n                ),\r\n                loading: false,\r\n            };\r\n        case SET_INGREDIENT_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import {GET_RECIPES, SET_RECIPE_LOADING} from '../actions/types';\r\n\r\nconst initialState = {\r\n    recipes: null,\r\n    loading: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_RECIPES:\r\n            return {\r\n                ...state,\r\n                recipes: action.payload,\r\n                loading: false,\r\n            };\r\n        case SET_RECIPE_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import {combineReducers} from 'redux';\n\nimport ingredient from './ingredient';\nimport recipe from './recipe';\n\nexport default combineReducers({ingredient, recipe});\n","import {applyMiddleware, createStore} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\n\nconst store = createStore(\n    rootReducer,\n    {},\n    composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React, {Fragment} from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\n\r\nimport Header from './components/Header';\r\nimport Home from './pages/Home';\r\nimport NotFound from './pages/NotFound';\r\nimport store from './store';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Fragment>\r\n                <Header />\r\n                <section className=\"container my-3\">\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Home} />\r\n                        <Route component={NotFound} />\r\n                    </Switch>\r\n                </section>\r\n            </Fragment>\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}